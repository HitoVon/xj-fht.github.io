<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Carrot</title>
  
  <subtitle>不积硅步 无以行千里</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://xj-fht.github.io/"/>
  <updated>2018-11-11T08:11:15.000Z</updated>
  <id>https://xj-fht.github.io/</id>
  
  <author>
    <name>Carrot</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>文献阅读和文献检索的基本方法</title>
    <link href="https://xj-fht.github.io/2018/11/11/%E6%96%87%E7%8C%AE%E9%98%85%E8%AF%BB%E5%92%8C%E6%96%87%E7%8C%AE%E6%A3%80%E7%B4%A2%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%96%B9%E6%B3%95/"/>
    <id>https://xj-fht.github.io/2018/11/11/文献阅读和文献检索的基本方法/</id>
    <published>2018-11-11T07:50:24.000Z</published>
    <updated>2018-11-11T08:11:15.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="文献阅读三步迭代法"><a href="#文献阅读三步迭代法" class="headerlink" title="文献阅读三步迭代法"></a>文献阅读三步迭代法</h3><p>你如果对应一个领域是新入门者，不要紧，通过以下途径，经过一段艰辛而有趣的跋涉，你可以成为专家，这个过程没有捷径，只有执着且勤奋的耕耘，方有收获。</p><p>如果你正在读A文献，可采用三步迭代法进行阅读。</p><ol><li>读A文献本身; </li><li>读A文献引用的文献，从A文献的Reference列表可以看出被A引用的文献，即阅读A的前驱工作文献; <code>(第一种迭代)</code></li><li>读引用A文献的文献，将A文献的title输入scholar.google.com即可以看到该文献已经被引用多少次，被哪些文章引用，即阅读A的后继工作文献；<code>(第二种迭代)</code></li><li>读A文献作者列表中其他文献，可以通过A文献作者（含研究组合作者）的主页或者A文献作者（含研究组合作者）的DBLP页面浏览到他的发表文章列表，或者将A文献作者名输入scholar.google.com（替代网站：<a href="https://xueshu.glgoo.org" target="_blank" rel="noopener">https://xueshu.glgoo.org</a> ），可以搜索该作者的发表的文章，概括起来讲，就是阅读A文献的作者及其合作者的文献。<code>(第三种迭代)</code></li></ol><p>经过这组迭代过程，可以逐步掌握这个领域的文献的闭包集合，将逐步深入了解这个问题领域。</p><h3 id="文献检索方法"><a href="#文献检索方法" class="headerlink" title="文献检索方法"></a>文献检索方法</h3><ol><li>通过scholar.google.com检索。(替代网站：<a href="https://xueshu.glgoo.org" target="_blank" rel="noopener">https://xueshu.glgoo.org</a> )</li><li>DBLP, <a href="http://www.informatik.uni-trier.de/~ley/db/" target="_blank" rel="noopener">http://www.informatik.uni-trier.de/~ley/db/</a><br>德国特里尔大学主办的计算机学科文献索引网站, 只提供文献列表。 </li><li>Citeseer, <a href="http://citeseerx.ist.psu.edu/" target="_blank" rel="noopener">http://citeseerx.ist.psu.edu/</a> 非出版社学术网站，不需要校园IP，公网出国。</li><li>IEEE文献网站 <a href="http://ieeexplore.ieee.org/" target="_blank" rel="noopener">http://ieeexplore.ieee.org/</a> （需要校园IP&amp;Bras）</li><li>ACM文献网站 <a href="http://portal.acm.org/" target="_blank" rel="noopener">http://portal.acm.org/</a>   （需要校园IP&amp;Bras）<br>国内清华镜像: <a href="http://acm.lib.tsinghua.edu.cn/" target="_blank" rel="noopener">http://acm.lib.tsinghua.edu.cn/</a> （需要校园IP&amp;Bras）</li><li>学术站点: <a href="http://www.springerlink.com" target="_blank" rel="noopener">http://www.springerlink.com</a>  Springer出版社的文献网站。（需要校园IP&amp;Bras）<br>国内清华镜像: <a href="http://springer.lib.tsinghua.edu.cn" target="_blank" rel="noopener">http://springer.lib.tsinghua.edu.cn</a>  （需要校园IP&amp;Bras）</li><li>学术站点 <a href="http://www.sciencedirect.com" target="_blank" rel="noopener">http://www.sciencedirect.com</a>  Elsevier出版社的文献网站。（需要校园IP&amp;Bras）</li><li>学术站点 <a href="http://www.worldscientific.com/" target="_blank" rel="noopener">http://www.worldscientific.com/</a>  worldscientific出版社的文献网站。（需要校园IP&amp;Bras）</li><li>学术站点<a href="http://as.wiley.com/WileyCDA/Section/index.html" target="_blank" rel="noopener">http://as.wiley.com/WileyCDA/Section/index.html</a>  Wiley出版社的文献网站。（需要校园IP&amp;Bras）</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;文献阅读三步迭代法&quot;&gt;&lt;a href=&quot;#文献阅读三步迭代法&quot; class=&quot;headerlink&quot; title=&quot;文献阅读三步迭代法&quot;&gt;&lt;/a&gt;文献阅读三步迭代法&lt;/h3&gt;&lt;p&gt;你如果对应一个领域是新入门者，不要紧，通过以下途径，经过一段艰辛而有趣的跋涉，你可以
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>在Github上搭建Hexo博客</title>
    <link href="https://xj-fht.github.io/2018/11/08/%E5%9C%A8GitHub%E4%B8%8A%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2/"/>
    <id>https://xj-fht.github.io/2018/11/08/在GitHub上搭建Hexo博客/</id>
    <published>2018-11-08T02:08:55.000Z</published>
    <updated>2018-11-11T08:02:59.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装配置node-js👋"><a href="#安装配置node-js👋" class="headerlink" title="安装配置node.js👋"></a>安装配置node.js👋</h3><p>如果你的机器没有安装node.js，则需要先安装。具体见下链接👇<br>👋 <a href="http://www.runoob.com/nodejs/nodejs-install-setup.html" target="_blank" rel="noopener">这里</a></p><h3 id="安装配置git"><a href="#安装配置git" class="headerlink" title="安装配置git"></a>安装配置git</h3><p>如果你的机器没有安装node.js，则需要先安装。具体见下链接👇<br>👋 <a href="http://jlord.us/git-it/challenges/get_git.html" target="_blank" rel="noopener">这里</a></p><h3 id="在GitHub上创建一个项目仓库"><a href="#在GitHub上创建一个项目仓库" class="headerlink" title="在GitHub上创建一个项目仓库"></a>在GitHub上创建一个项目仓库</h3><p>新建一个repository，命名为：username.github.io  比如说，你GitHub账户名为test，则仓库命名为 test.github.io，此处的username必须是你的GitHub账户名，其他命名无效。<br>之后可访问的网站链接就是<a href="http://username.github.io/" target="_blank" rel="noopener">http://username.github.io/</a><br>一次每个GitHub账户最多可创建一个可以通过域名直接访问的仓库。</p><h3 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h3><p>域名配置最常用的方式有两种：CNAME和A记录，CNAME填写域名，A填写ip，所以先ping一下你的 username.github.io的ip，然后到dns设置页，将A记录只想ping出来的ip，将CNAME指向你的 username.github.io，这样可以保证无论是否添加www都可以访问你的主页。<br>然后在GitHub的根目录下创建一个CNAME文件（无后缀名），里面填写你的域名，比如 example.com<br>在此过程中，可能需要到购买域名的页面设置一下DNS：<br>Nameserver 1<br>ns2.alidns.com<br>Nameserver 1<br>ns1.alidns.com</p><h3 id="Hexo的下载和安装"><a href="#Hexo的下载和安装" class="headerlink" title="Hexo的下载和安装"></a>Hexo的下载和安装</h3><p>利用npm安装hexo<br><code>npm install -g hexo</code><br>在本地创建一个工作目录Hexo，cd进入Hexo，进行初始化<br><code>hexo init</code></p><h3 id="让博客可以发布到Git"><a href="#让博客可以发布到Git" class="headerlink" title="让博客可以发布到Git"></a>让博客可以发布到Git</h3><ul><li>安装hexo-deployer-git<br><code>npm install hexo-deployer-git --save</code></li><li>配置你的hexo博客根目录下的_config.yml，在deploy模块，修改成你的 github.io<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: http://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:username/username.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></li></ul><h3 id="Hexo常用命令"><a href="#Hexo常用命令" class="headerlink" title="Hexo常用命令"></a>Hexo常用命令</h3><ol><li>创建文章<code>hexo new &quot;blog title&quot;</code></li><li>生成页面<code>hexo generate</code> or <code>hexo g</code></li><li>清楚数据缓存<code>hexo clean</code></li><li>生成并发布<code>hexo g -d</code></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;安装配置node-js👋&quot;&gt;&lt;a href=&quot;#安装配置node-js👋&quot; class=&quot;headerlink&quot; title=&quot;安装配置node.js👋&quot;&gt;&lt;/a&gt;安装配置node.js👋&lt;/h3&gt;&lt;p&gt;如果你的机器没有安装node.js，则需要先安装。具
      
    
    </summary>
    
    
  </entry>
  
</feed>
